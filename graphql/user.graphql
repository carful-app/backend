extend type Query @guard {
    "Find a single user by an identifying attribute."
    user(
        "Search by primary key."
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

        "Search by email address."
        email: String
            @eq
            @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
        "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
        name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    "Auth user."
    me: User! @auth
}

input UpdateUserInput {
    "The id of the user."
    id: ID! @rules(apply: ["required"])

    "The name of the user."
    name: String

    "The email address of the user."
    email: String @rules(apply: ["email"])
}

extend type Mutation @guard {
    updateUser(input: UpdateUserInput! @spread): User! @update
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!

    "Providers that are linked to this user."
    providers: [Provider!]! @hasMany

    "Is user subscribed"
    isSubscribed: Boolean!

    "Stripe customer id"
    stripe_id: String

    "Is complete"
    isComplete: Boolean! @rename(attribute: "is_complete")

    "Transactions"
    transactions: [Transaction!]! @hasMany
}

"Provider that is linked to a user."
type Provider {
    "Unique primary key."
    id: ID!

    "The name of the provider."
    provider: String!

    "The provider id of the user."
    provider_id: String!

    "The unique identifier of the user at the provider."
    user_id: String!

    "The avatar of the user at the provider."
    avatar: String

    "When the provider was linked to the user."
    created_at: DateTime!

    "When the provider was last updated."
    updated_at: DateTime!

    "The user that is linked to this provider."
    user: User! @belongsTo
}
